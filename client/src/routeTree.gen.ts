/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as SignupRouteImport } from './routes/signup'
import { Route as LoginRouteImport } from './routes/login'
import { Route as GenerateImageRouteImport } from './routes/generate-image'
import { Route as GenerateRouteImport } from './routes/generate'
import { Route as BhvrRouteImport } from './routes/bhvr'
import { Route as AboutRouteImport } from './routes/about'
import { Route as IndexRouteImport } from './routes/index'
import { Route as DashboardIndexRouteImport } from './routes/dashboard/index'
import { Route as CreateIndexRouteImport } from './routes/create/index'
import { Route as CreateTestRouteImport } from './routes/create/test'
import { Route as DashboardVideosIndexRouteImport } from './routes/dashboard/videos/index'
import { Route as DashboardVideosVideoIDRouteImport } from './routes/dashboard/videos/$videoID'

const SignupRoute = SignupRouteImport.update({
  id: '/signup',
  path: '/signup',
  getParentRoute: () => rootRouteImport,
} as any)
const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const GenerateImageRoute = GenerateImageRouteImport.update({
  id: '/generate-image',
  path: '/generate-image',
  getParentRoute: () => rootRouteImport,
} as any)
const GenerateRoute = GenerateRouteImport.update({
  id: '/generate',
  path: '/generate',
  getParentRoute: () => rootRouteImport,
} as any)
const BhvrRoute = BhvrRouteImport.update({
  id: '/bhvr',
  path: '/bhvr',
  getParentRoute: () => rootRouteImport,
} as any)
const AboutRoute = AboutRouteImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardIndexRoute = DashboardIndexRouteImport.update({
  id: '/dashboard/',
  path: '/dashboard/',
  getParentRoute: () => rootRouteImport,
} as any)
const CreateIndexRoute = CreateIndexRouteImport.update({
  id: '/create/',
  path: '/create/',
  getParentRoute: () => rootRouteImport,
} as any)
const CreateTestRoute = CreateTestRouteImport.update({
  id: '/create/test',
  path: '/create/test',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardVideosIndexRoute = DashboardVideosIndexRouteImport.update({
  id: '/dashboard/videos/',
  path: '/dashboard/videos/',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardVideosVideoIDRoute = DashboardVideosVideoIDRouteImport.update({
  id: '/dashboard/videos/$videoID',
  path: '/dashboard/videos/$videoID',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/bhvr': typeof BhvrRoute
  '/generate': typeof GenerateRoute
  '/generate-image': typeof GenerateImageRoute
  '/login': typeof LoginRoute
  '/signup': typeof SignupRoute
  '/create/test': typeof CreateTestRoute
  '/create': typeof CreateIndexRoute
  '/dashboard': typeof DashboardIndexRoute
  '/dashboard/videos/$videoID': typeof DashboardVideosVideoIDRoute
  '/dashboard/videos': typeof DashboardVideosIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/bhvr': typeof BhvrRoute
  '/generate': typeof GenerateRoute
  '/generate-image': typeof GenerateImageRoute
  '/login': typeof LoginRoute
  '/signup': typeof SignupRoute
  '/create/test': typeof CreateTestRoute
  '/create': typeof CreateIndexRoute
  '/dashboard': typeof DashboardIndexRoute
  '/dashboard/videos/$videoID': typeof DashboardVideosVideoIDRoute
  '/dashboard/videos': typeof DashboardVideosIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/bhvr': typeof BhvrRoute
  '/generate': typeof GenerateRoute
  '/generate-image': typeof GenerateImageRoute
  '/login': typeof LoginRoute
  '/signup': typeof SignupRoute
  '/create/test': typeof CreateTestRoute
  '/create/': typeof CreateIndexRoute
  '/dashboard/': typeof DashboardIndexRoute
  '/dashboard/videos/$videoID': typeof DashboardVideosVideoIDRoute
  '/dashboard/videos/': typeof DashboardVideosIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/bhvr'
    | '/generate'
    | '/generate-image'
    | '/login'
    | '/signup'
    | '/create/test'
    | '/create'
    | '/dashboard'
    | '/dashboard/videos/$videoID'
    | '/dashboard/videos'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/about'
    | '/bhvr'
    | '/generate'
    | '/generate-image'
    | '/login'
    | '/signup'
    | '/create/test'
    | '/create'
    | '/dashboard'
    | '/dashboard/videos/$videoID'
    | '/dashboard/videos'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/bhvr'
    | '/generate'
    | '/generate-image'
    | '/login'
    | '/signup'
    | '/create/test'
    | '/create/'
    | '/dashboard/'
    | '/dashboard/videos/$videoID'
    | '/dashboard/videos/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutRoute: typeof AboutRoute
  BhvrRoute: typeof BhvrRoute
  GenerateRoute: typeof GenerateRoute
  GenerateImageRoute: typeof GenerateImageRoute
  LoginRoute: typeof LoginRoute
  SignupRoute: typeof SignupRoute
  CreateTestRoute: typeof CreateTestRoute
  CreateIndexRoute: typeof CreateIndexRoute
  DashboardIndexRoute: typeof DashboardIndexRoute
  DashboardVideosVideoIDRoute: typeof DashboardVideosVideoIDRoute
  DashboardVideosIndexRoute: typeof DashboardVideosIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/signup': {
      id: '/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof SignupRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/generate-image': {
      id: '/generate-image'
      path: '/generate-image'
      fullPath: '/generate-image'
      preLoaderRoute: typeof GenerateImageRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/generate': {
      id: '/generate'
      path: '/generate'
      fullPath: '/generate'
      preLoaderRoute: typeof GenerateRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/bhvr': {
      id: '/bhvr'
      path: '/bhvr'
      fullPath: '/bhvr'
      preLoaderRoute: typeof BhvrRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard/': {
      id: '/dashboard/'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/create/': {
      id: '/create/'
      path: '/create'
      fullPath: '/create'
      preLoaderRoute: typeof CreateIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/create/test': {
      id: '/create/test'
      path: '/create/test'
      fullPath: '/create/test'
      preLoaderRoute: typeof CreateTestRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard/videos/': {
      id: '/dashboard/videos/'
      path: '/dashboard/videos'
      fullPath: '/dashboard/videos'
      preLoaderRoute: typeof DashboardVideosIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard/videos/$videoID': {
      id: '/dashboard/videos/$videoID'
      path: '/dashboard/videos/$videoID'
      fullPath: '/dashboard/videos/$videoID'
      preLoaderRoute: typeof DashboardVideosVideoIDRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutRoute: AboutRoute,
  BhvrRoute: BhvrRoute,
  GenerateRoute: GenerateRoute,
  GenerateImageRoute: GenerateImageRoute,
  LoginRoute: LoginRoute,
  SignupRoute: SignupRoute,
  CreateTestRoute: CreateTestRoute,
  CreateIndexRoute: CreateIndexRoute,
  DashboardIndexRoute: DashboardIndexRoute,
  DashboardVideosVideoIDRoute: DashboardVideosVideoIDRoute,
  DashboardVideosIndexRoute: DashboardVideosIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
